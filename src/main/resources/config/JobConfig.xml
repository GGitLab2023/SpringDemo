<beans xmlns = "http://www.springframework.org/schema/beans" 
   xmlns:batch = "http://www.springframework.org/schema/batch" 
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:util = "http://www.springframework.org/schema/util" 
   xsi:schemaLocation = "http://www.springframework.org/schema/batch 
   
      http://www.springframework.org/schema/batch/spring-batch-2.2.xsd 
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"> 
       
   <import resource="classpath:Batch/Jobs/context.xml" />
   
   <!--<bean id = "emp" class = "Employee" scope = "prototype" /> -->
   
   
   <batch:job id = "employeeJob"> 
      <batch:step id = "step1"> 
         <batch:tasklet> 
            <batch:chunk reader = "dbItemReader" 
               writer = "csvFileItemWriter" processor = "itemProcessor" 
               commit-interval = "10"> 
            </batch:chunk> 
             <batch:listeners>
              <!--  <batch:listener ref="readListener" />-->
                <batch:listener ref="writeListener" />
            </batch:listeners>
         </batch:tasklet> 
      </batch:step> 
   </batch:job> 
   

         
   <bean id = "dbItemReader" 
      class = "org.springframework.batch.item.database.JdbcCursorItemReader" > 
      <property name = "dataSource" ref = "dataSource" /> 
      <property name = "sql" value = "select * from EMPLOYEE" /> 
      <property name = "rowMapper">  
         <bean class = "com.spring.mapper.EmployeeRowMapper" /> 
      </property> 
   </bean>
   
   <bean id = "itemProcessor" class = "com.ItemProcessor.CustomItemProcessor" />  
   
   <bean id = "csvFileItemWriter" 
      class = " org.springframework.batch.item.file.FlatFileItemWriter">      
      <property name = "resource" value = "file:generatedFiles/emep.txt"/> 
      <property name = "lineAggregator"> 
         <bean class = " org.springframework.batch.item.file.transform.PassThroughLineAggregator"/> 
      </property> 
   </bean>
   <!--<bean id="readListener" class="com.Listeners.ReadListener" /> -->
    <bean id="writeListener" class="com.Listeners.WriteListener" > 
     <property name = "dataSource" ref = "dataSource" /> 
   </bean>
</beans> 